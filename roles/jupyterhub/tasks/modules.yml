---
- name: Ensure Jupyter modules directory exists
  file: path="{{ jupyterhub_modules_dir }}" state=directory group=users mode=g+rw

# Rasterio
# We followed the instructions posted at:
# https://github.com/mapbox/rasterio/blob/master/CONTRIBUTING.rst#installing-rasterio

- name: rasterio dependencies
  apt: name={{ item }}
  with_items:
    - python-gdal
    - python3-gdal
    - libatlas-dev
    - libatlas-base-dev
    - gfortran

- name: Clone Rasterio GitHub repository
  git:
    repo: https://github.com/mapbox/rasterio
    dest: "{{ jupyterhub_modules_dir }}/rasterio"
    update: no

- name: Install requirements
  shell: "cd {{ jupyterhub_modules_dir }}/rasterio/ ; pip3 install -r requirements-dev.txt"

- name: Install rasterio
  shell: "cd {{ jupyterhub_modules_dir }}/rasterio/ ; pip3 install -e .[test]"

- name: Making sure R is installed (debian/ubuntu apt)
  apt: pkg=r-base state=installed

- name: r - packages
  command: >
    Rscript --slave --no-save --no-restore-history -e "if (! ('{{ item }}' %in% installed.packages()[,'Package'])) { install.packages(pkgs='{{ item }}', repos=c('http://ftp.heanet.ie/mirrors/cran.r-project.org/')); print('Added'); } else { print('Already installed'); }"
  register: r_result
  failed_when: "r_result.rc != 0 or 'had non-zero exit status' in r_result.stderr"
  changed_when: "'Added' in r_result.stdout"
  with_items:
    - raster
    - rgdal
    - rgeos
    - ncdf4
    - igraph
    - tcltk
    - parallel
    - rasterVis
    - sp

- name: Ensure Jupyter's python modules directory exists
  file: path="{{ jupyterhub_modules_dir }}/python/" state=directory group=users mode=g+rw

- name: Copy Python modules
  copy:
    src: '{{ item }}'
    dest: '{{ jupyterhub_modules_dir }}/python/'
  with_fileglob:
    - "{{ role_path }}/../../files/python/*"
  tags:
    - user_defined_modules

- name: Ensure Jupyter's R modules directory exists
  file: path="{{ jupyterhub_modules_dir }}/r/" state=directory group=users mode=g+rw

- name: Copy R modules
  copy:
    src: '{{ item }}'
    dest: '{{ jupyterhub_modules_dir }}/r/'
  with_fileglob:
    - "{{ role_path }}/../../files/r/*"
  tags:
    - user_defined_modules

- name: Ensure Jupyter's scala modules directory exists
  file: path="{{ jupyterhub_modules_dir }}/scala/" state=directory group=users mode=g+rw

- name: Copy Scala modules
  copy:
    src: '{{ item }}'
    dest: '{{ jupyterhub_modules_dir }}/scala/'
  with_fileglob:
    - "{{ role_path }}/../../files/scala/*"
  tags:
    - user_defined_modules
