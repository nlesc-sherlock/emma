---
- name: Set firewall settings
  include: firewall.yml
  tags:
    - firewall

- name: Set hostname to fqdn
  hostname: name='{{ inventory_hostname }}'
- name: Dont bind hostname to loopback
  replace: dest=/etc/hosts regexp='^127.0.[01].1.*(?:{{ inventory_hostname }}|xenial).*$' replace='' backup=yes
- name: Set locale
  blockinfile:
    dest: /etc/environment
    block: |
      LC_ALL="en_US.utf-8"
- name: /data directory
  file: name=/data state=directory
- name: Swap file
  script: swap.sh creates=/data/local/swapfile
  when: create_swap_space == true

- name: Remove puppet and chef
  apt: name={{ item }} state=absent
  with_items:
    - puppet
    - chef
- name: Check if packages need to be autoremoved
  command: apt-get --dry-run autoremove
  register: check_autoremove
  changed_when: False
- name: Autoremove unused packages
  command: apt-get -y autoremove
  when: "'packages will be REMOVED' in check_autoremove.stdout"
- name: Check if network is up
  command: ping -c 1 www.google.com
  ignore_errors: True
  register: ping_result
- name: Restart network service
  service: name=networking state=restarted
  when: ping_result.rc != 0
- name: Update apt cache
  apt: update_cache=yes
- name: Install reboot notifier
  apt: name=update-notifier-common
- name: Install psmisc
  apt: name=psmisc
- name: Install aptitude
  apt: name=aptitude
- name: Upgrade APT to the lastest packages
  apt: upgrade=full
- name: Rebooting machine so new kernel is active
  become: yes
  shell: sleep 5 && shutdown -r now #removes=/var/run/reboot-required
  async: 1
  poll: 0
  ignore_errors: true
  register: restarted
- name: Waiting for reboot...
  become: false
  local_action: wait_for host="{{ inventory_hostname }}" search_regex=OpenSSH port=22 delay=60 timeout=120 state=started
  when: restarted.changed
- name: Check if network is up
  command: ping -c 1 www.google.com
  ignore_errors: True
  register: ping_result
- name: Restart network service
  service: name=networking state=restarted
  when: ping_result.rc != 0
- name: NTP
  apt: name=ntp
- name: Home dir on /data/local/home
  file: path=/data/local/home state=directory owner=ubuntu group=users mode=g+rwx
- name: Posix users
  user: user={{ item.name }} group=users shell=/bin/bash uid={{ item.uid }} password='{{ item.password }}' home=/data/local/home/{{ item.name }} move_home=yes
  with_items: "{{ users }}"
- name: ~/*.ssh
  file: path=/data/local/home/{{ item.name }}/.ssh owner='{{ item.uid }}' group=users state=directory
  with_items: "{{ users }}"
- name: SSH private key
  copy:
    src: '{{ role_path }}/../../files/{{ item.name }}.key'
    dest: '/data/local/home/{{ item.name }}/.ssh/id_rsa'
    owner: '{{ item.name }}'
    group: users
    mode: "u=rw"
  with_items: "{{ users }}"
- name: SSH public key
  copy:
    src: '{{ role_path }}/../../files/{{ item.name }}.key.pub'
    dest: '/data/local/home/{{ item.name }}/.ssh/id_rsa.pub'
    owner: '{{ item.name }}'
    group: users
    mode: "u=rw"
  with_items: "{{ users }}"
- name: SSH authorized keys
  authorized_key:
    user: '{{ item.name }}'
    state: present
    key: "{{ lookup('file', role_path + '/../../files/' + item.name + '.key.pub') }}"
  with_items: "{{ users }}"
- name: Tmp dir on /data/local
  file: path=/data/local/tmp state=directory mode=1777
- name: Install python-lxml
  apt: name=python-lxml
- name: accept Oracle license
  debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' vtype='select' value='true'

#Install Java 8 from Oracle.
- name: Add ppa:webupd8team/java
  apt_repository: repo=ppa:webupd8team/java
- name: Update apt cache
  apt: update_cache=yes
- name: Oracle JDK8
  apt: name={{ item }}
  with_items:
    - oracle-java8-installer
    - oracle-java8-set-default
    - oracle-java8-unlimited-jce-policy

#Install pip
- name: Install pip
  apt: name={{ item }}
  with_items:
    - python3-pip
    - python-pip

#Install Git
- name: Install Git
  apt: name=git

#Install Maven
- name: install maven
  apt: name=maven

#Install sbt
- name: Add repo for sbt
  shell: echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list

- name: Add apt key for sbt
  apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=2EE0EA64E40A89B84B2DF73499E82A75642AC823

- name: Update apt cache
  apt: update_cache=yes

- name: Install sbt
  apt: name=sbt

# Extra Python packages
- name: Extra Python packages
  pip: name={{ item }} executable=pip3
  with_items: "{{ python_packages }}"
  tags:
    - extra_python_packages

# Extra System packages
- name: Extra system packages
  apt: name={{ item }}
  with_items: "{{ system_packages }}"
  tags:
    - extra_system_packages
